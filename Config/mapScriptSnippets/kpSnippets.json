[
    {
        "Group": 0,
        "Title": "KP - OnHouseBuilt",
        "Code": "procedure OnHouseBuilt(aHouse: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnHouseDamaged",
        "Code": "procedure OnHouseDamaged(aHouse: Integer; aAttacker: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnHouseDestroyed",
        "Code": "procedure OnHouseDestroyed(aHouse: Integer; aDestroyerIndex: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnHousePlanPlaced",
        "Code": "procedure OnHousePlanPlaced(aPlayer: Integer; aX: Word; aY: Word; aType: TKMHouseType);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnMissionStart",
        "Code": "procedure OnMissionStart;\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnPlayerDefeated",
        "Code": "procedure OnPlayerDefeated(aPlayer: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnPlayerVictory",
        "Code": "procedure OnPlayerVictory(aPlayer: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnTerrainTrigger",
        "Code": "procedure OnTerrainTrigger(aTriggerId: Integer; aUnit: Integer; aX: Word; aY: Word);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnTick",
        "Code": "procedure OnTick(aTick: Integer);\r\nbegin\r\n  if (aTick mod 10 = 0) then\r\n    \r\n  if (aTick mod 10 = 2) then\r\n    \r\n  if (aTick mod 10 = 4) then\r\n    \r\n  if (aTick mod 10 = 6) then\r\n    \r\n  if (aTick mod 10 = 8) then\r\n    \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnUnitDied",
        "Code": "procedure OnUnitDied(aUnit: Integer; aKillerOwner: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnUnitTrained",
        "Code": "procedure OnUnitTrained(aUnit: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnUnitWoundedByHouse",
        "Code": "procedure OnUnitWoundedByHouse(aUnit: Integer; aAttackerHouse: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnUnitWoundedByUnit",
        "Code": "procedure OnUnitWoundedByUnit(aUnit: Integer; aAttackerUnit: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 0,
        "Title": "KP - OnWarriorEquipped",
        "Code": "procedure OnWarriorEquipped(aUnit: Integer; aGroup: Integer);\r\nbegin\r\n  \r\nend;\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - AISoldiersEquipRate",
        "Code": "var\r\n  playerId: Integer;\r\n  rate: Word;\r\n\r\nActions.AISoldiersEquipRate(playerId, rate);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - FogCoverAll",
        "Code": "var\r\n  playerId: Integer;\r\n\r\nActions.FogCoverAll(playerId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - FogCoverCircle",
        "Code": "var\r\n  playerId: Integer;\r\n  xCoord,\r\n  yCoord,\r\n  fogRadius: Word;\r\n\r\nActions.FogCoverCircle(playerId, xCoord, yCoord, fogRadius);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - FogCoverRect",
        "Code": "var\r\n  playerId: Integer;\r\n  xStartCoord,\r\n  yStartCoord,\r\n  xEndCoord,\r\n  yEndCoord: Word;\r\n\r\nActions.FogCoverRect(playerId, xStartCoord, yStartCoord, xEndCoord, yEndCoord);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - FogRevealAll",
        "Code": "var\r\n  playerId: Integer;\r\n\r\nActions.FogRevealAll(playerId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - FogRevealCircle",
        "Code": "var\r\n  playerId: Integer;\r\n  xCoord,\r\n  yCoord,\r\n  fogRadius: Word;\r\n\r\nActions.FogRevealCircle(playerId, xCoord, yCoord, fogRadius);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - FogRevealRect",
        "Code": "var\r\n  playerId: Integer;\r\n  xStartCoord,\r\n  yStartCoord,\r\n  xEndCoord,\r\n  yEndCoord: Word;\r\n\r\nActions.FogRevealRect(playerId, xStartCoord, yStartCoord, xEndCoord, yEndCoord);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GiveGroup",
        "Code": "var\r\n  playerId,\r\n  groupId: Integer;\r\n  unitType: TKMUnitType;\r\n  xCoord,\r\n  yCoord,\r\n  direction,\r\n  count,\r\n  columns: Word;\r\n\r\ngroupId := Actions.GiveGroup(playerId, unitType, xCoord, yCoord, direction, count, columns);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GiveHouse",
        "Code": "var\r\n  playerId,\r\n  houseId: Integer;\r\n  houseType: TKMHouseType;\r\n  xCoord,\r\n  yCoord: Word;\r\n  face: TKMHouseFace;\r\n\r\nhouseId := Actions.GiveHouse(playerId, houseType, xCoord, yCoord, face);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GiveUnit",
        "Code": "var\r\n  playerId,\r\n  unitId: Integer;\r\n  unitType: TKMUnitType;\r\n  xCoord,\r\n  yCoord,\r\n  direction: Word;\r\n\r\nunitId := Actions.GiveUnit(playerId, unitType, xCoord, yCoord, direction);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GiveWares",
        "Code": "var\r\n  playerId: Integer;\r\n  wareType: TKMWareType\r\n  count: Word;\r\n\r\nActions.GiveWares(playerId, wareType, count);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GiveWeapons",
        "Code": "var\r\n  playerId: Integer;\r\n  wareType: TKMWareType\r\n  count: Word;\r\n\r\nActions.GiveWeapons(playerId, wareType, count);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderAttackHouse",
        "Code": "var\r\n  groupId,\r\n  houseId: Integer;\r\n\r\nActions.GroupOrderAttackHouse(groupId, houseId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderAttackUnit",
        "Code": "var\r\n  groupId,\r\n  unitId: Integer;\r\n\r\nActions.GroupOrderAttackUnit(groupId, unitId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderFood",
        "Code": "var\r\n  groupId: Integer;\r\n\r\nActions.GroupOrderFood(groupId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderHalt",
        "Code": "var\r\n  groupId: Integer;\r\n\r\nActions.GroupOrderHalt(groupId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderLink",
        "Code": "var\r\n  groupId,\r\n  destGroupId: Integer;\r\n\r\nActions.GroupOrderLink(groupId, destGroupId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderSplit",
        "Code": "var\r\n  groupId,\r\n  newGroupId: Integer;\r\n\r\nnewGroupId := Actions.GroupOrderSplit(groupId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderStorm",
        "Code": "var\r\n  groupId: Integer;\r\n\r\nActions.GroupOrderStorm(groupId);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupOrderWalk",
        "Code": "var\r\n  groupId: Integer;\r\n  xCoord,\r\n  yCoord,\r\n  direction: Word;\r\n\r\nActions.GroupOrderWalk(groupId, xCoord, yCoord, direction);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - GroupSetFormation",
        "Code": "var\r\n  groupId: Integer;\r\n  numColumns: Byte;\r\n\r\nActions.GroupSetFormation(groupId, numColumns);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseAddDamage",
        "Code": "var\r\n  houseId: Integer;\r\n  damageAmount: Word;\r\n\r\nActions.HouseAddDamage(houseId, damageAmount);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseAddRepair",
        "Code": "var\r\n  houseId: Integer;\r\n  repairAmount: Word;\r\n\r\nActions.HouseAddRepair(houseId, repairAmount);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseAddWaresTo",
        "Code": "var\r\n  houseId: Integer;\r\n  wareType: TKMWareType;\r\n  count: Word;\r\n\r\nActions.HouseAddWaresTo(houseId, wareType, repairAmount);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseAllow",
        "Code": "var\r\n  playerId: Integer;\r\n  houseType: TKMHouseType;\r\n  allowed: Boolean;\r\n\r\nActions.HouseAllow(playerId, houseType, allowed);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseDestroy",
        "Code": "var\r\n  houseId: Integer;\r\n  silent: Boolean; \/\/ Prevent the player from recieving a notification\r\n\r\nActions.HouseDestroy(houseId, silent);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseRepairEnable",
        "Code": "var\r\n  houseId: Integer;\r\n  repairEnabled: Boolean;\r\n\r\nActions.HouseRepairEnable(houseId, repairEnabled);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseTrainQueueAdd",
        "Code": "var\r\n  houseId: Integer;\r\n  unitType: TKMUnitType;\r\n  count: Integer;\r\n  realCount: Integer;\r\n\r\nrealCount := Actions.HouseTrainQueueAdd(houseId, unitType, count);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseTrainQueueRemove",
        "Code": "var\r\n  houseId: Integer;\r\n  queueIndex: Integer;\r\n\r\nActions.HouseTrainQueueRemove(houseId, queueIndex);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseUnlock",
        "Code": "var\r\n  playerId: Integer;\r\n  houseType: TKMHouseType;\r\n\r\nActions.HouseUnlock(playerId, houseType);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseWareInBlock",
        "Code": "var\r\n  houseId: Integer;\r\n  wareType: TKMWareType;\r\n  blocked: Boolean;\r\n\r\nActions.HouseWareInBlock(houseId, wareType, blocked);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseWeaponsOrderSet",
        "Code": "var\r\n  houseId: Integer;\r\n  wareType: TKMWareType;\r\n  amount: Integer;\r\n\r\nActions.HouseWeaponsOrderSet(houseId, wareType, amount);\r\n"
    },
    {
        "Group": 1,
        "Title": "KP - HouseWoodcutterChopOnly",
        "Code": "var\r\n  houseId: Integer;\r\n  chopOnly: Boolean;\r\n\r\nActions.HouseWoodcutterChopOnly(houseId, chopOnly);\r\n"
    },
    {
        "Group": 3,
        "Title": "KP - GetHouseName",
        "Code": "function GetHouseName(aHouseType: TKMHouseType): String;\r\nbegin\r\n  case aHouseType of\r\n    htNone:           Result := 'None';\r\n    htFoundry:        Result := 'Foundry';\r\n    htWeaponSmithy:   Result := 'Weapon-smithy';\r\n    htCoalMaker:      Result := 'Coal-maker';\r\n    htIronMine:       Result := 'Iron-mine';\r\n    htGoldMine:       Result := 'Gold-mine';\r\n    htFishermans:     Result := 'Fishermans';\r\n    htBakery:         Result := 'Bakery';\r\n    htFarm:           Result := 'Farm';\r\n    htWoodcutters:    Result := 'Woodcutters';\r\n    htArmorSmithy:    Result := 'Armor-smithy';\r\n    htCamp:           Result := 'Camp';\r\n    htStables:        Result := 'Stables';\r\n    htSchool:         Result := 'School';\r\n    htStoneCutter:    Result := 'Stone-cutters';\r\n    htMetallurgists:  Result := 'Metallurgists';\r\n    htSwineFarm:      Result := 'Swine-farm';\r\n    htArrowTower:     Result := 'Arrow-tower';\r\n    htRangerShop:     Result := 'Ranger-shop';\r\n    htWeaponWorkshop: Result := 'Weapon-workshop';\r\n    htArmorWorkshop:  Result := 'Armor-workshop';\r\n    htBarracks:       Result := 'Barracks';\r\n    htMill:           Result := 'Mill';\r\n    htSiegeWorkshop:  Result := 'Siege-workshop';\r\n    htButchers:       Result := 'Butchers';\r\n    htTannery:        Result := 'Tannery';\r\n    htStore:          Result := 'Store';\r\n    htTavern:         Result := 'Tavern';\r\n    htBrewery:        Result := 'Brewery';\r\n    htMarketplace:    Result := 'Marketplace';\r\n    htFort:           Result := 'Fort';\r\n    htBoltTower:      Result := 'Bolt-tower';\r\n    htCiderMaker:     Result := 'Cider-maker';\r\n    htSawmill:        Result := 'Sawmill';\r\n    htCottage:        Result := 'Cottage';\r\n  else\r\n    Result := 'Unknown';\r\n  end;\r\nend;\r\n"
    }
]
